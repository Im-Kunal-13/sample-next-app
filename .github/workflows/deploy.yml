name: Deploy to EC2 (Zero Downtime)

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/sample-next-app
            git pull origin master

            # Step 1: Stop and remove previous green (if exists)
            sudo docker stop sample-next-app-green || true
            sudo docker rm sample-next-app-green || true

            # Step 2: Build new green
            sudo docker build -t sample-next-app-green:latest .

            # Step 3: Start green on temp port (2792)
            sudo docker run -d --name sample-next-app-green -p 2792:2791 sample-next-app-green:latest

            # Step 4: Wait until green is healthy
            echo "Waiting for green to become healthy..."
            for i in {1..10}; do
              curl -f http://localhost:2792 && echo "Green is healthy." && break
              echo "Waiting... ($i)"
              sleep 2
            done

            # Step 5: Stop and remove current blue (active app)
            sudo docker stop sample-next-app-blue || true
            sudo docker rm sample-next-app-blue || true

            # Step 6: Re-tag green as blue and run it on port 2791
            sudo docker tag sample-next-app-green:latest sample-next-app-blue:latest
            sudo docker run -d --name sample-next-app-blue -p 2791:2791 sample-next-app-blue:latest

            # Step 7: Remove temporary green
            sudo docker stop sample-next-app-green || true
            sudo docker rm sample-next-app-green || true

            echo "Deployment complete. Blue now running latest version on port 2791."
